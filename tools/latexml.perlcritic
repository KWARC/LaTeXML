#======================================================================
# perlcritic profile for LaTeXML
#
# See /usr/share/doc/perl-perlCritic-1.118/examples/perlcriticrc-conway
# for a guide to the naming conventions of the modules.
#======================================================================
# Let's aim for passing level 3, by default

severity=3

#======================================================================

# I can see why this is discouraged, but I use it very much
[-Perl::Critic::Policy::Modules::ProhibitMultiplePackages]
# Probably not a bad idea, but bindings need a special treatment!
[-Perl::Critic::Policy::Modules::RequireFilenameMatchesPackage]

# requiring /x on all regexps !?!?!?  (see p 236)
[-Perl::Critic::Policy::RegularExpressions::RequireExtendedFormatting]

# don't use map in void context????
[-Perl::Critic::Policy::BuiltinFunctions::ProhibitVoidMap]

# This could be useful except that it seems to trigger
# any time there's an open!!
[-Perl::Critic::Policy::InputOutput::RequireBriefOpen]

# The names very often are not ambiguous in their context
[-Perl::Critic::Policy::NamingConventions::ProhibitAmbiguousNames]

# This one can be a good clue to confusingly written subs.
# But it's also rather annoying about subs that have to do confusing stuff.
[-Perl::Critic::Policy::ControlStructures::ProhibitCascadingIfElse]

# Could be a another useful warning, but such vars often ARE useful or necessary
[-Perl::Critic::Policy::Variables::ProhibitPackageVars]

# Well, if I exported them, I meant it; OK?
[-Perl::Critic::Policy::Modules::ProhibitAutomaticExportation]

